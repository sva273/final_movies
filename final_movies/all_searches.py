from typing import Dict, Tuple
from dotenv import load_dotenv
from final_movies.mysql_connector import (
    search_movies,  # –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤
    get_all_genres,  # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∂–∞–Ω—Ä–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
from final_movies.log_writer import log_search

# –§—É–Ω–∫—Ü–∏—è –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
from final_movies.formatter import paginate_results, display_ratings_table, display_genre_table

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –°–ª–æ–≤–∞—Ä—å —Å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–æ–π –∫–æ–¥–æ–≤ MPAA
available_ratings: Dict[str, str] = {
     "G": "üë∂ General Audiences ‚Äì All ages admitted",
    "PG": "üë™ Parental Guidance Suggested",
    "PG-13": "‚ö†Ô∏è Parents Strongly Cautioned",
    "R": "üîû Restricted ‚Äì Under 17 requires accompanying parent or adult guardian",
    "NC-17": "üö´ Adults Only ‚Äì No one 17 and under admitted"
}


def get_user_input(prompt: str) -> str:
    """
    –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–≤–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–±—Ä–µ–∑–∫–æ–π –ø—Ä–æ–±–µ–ª–æ–≤.

    :param prompt: –¢–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞
    :return: –°—Ç—Ä–æ–∫–∞ –≤–≤–æ–¥–∞ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –ø–æ –∫—Ä–∞—è–º
    """
    return input(prompt).strip()


def select_genre() -> Tuple[int, Tuple[int, int], str]:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–±–æ—Ä –∂–∞–Ω—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤.

    –°–Ω–∞—á–∞–ª–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –∂–∞–Ω—Ä–æ–≤ —Å –∏—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º–∏ (ID), –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º –≥–æ–¥–æ–≤ –≤—ã–ø—É—Å–∫–∞
    –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ñ–∏–ª—å–º–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é display_genre_table().
    –ó–∞—Ç–µ–º –æ–∂–∏–¥–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî ID –∂–∞–Ω—Ä–∞, –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π –≤ —Ç–∞–±–ª–∏—Ü–µ.

    –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π:
        - –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∂–∞–Ω—Ä–∞ (genre_id)
        - –∫–æ—Ä—Ç–µ–∂ –∏–∑ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≥–æ–¥–æ–≤ (min_year, max_year)
        - –Ω–∞–∑–≤–∞–Ω–∏–µ –∂–∞–Ω—Ä–∞ (genre_name)

    :return: –ö–æ—Ä—Ç–µ–∂ –≤–∏–¥–∞ (genre_id, (min_year, max_year), genre_name)
    :rtype: Tuple[int, Tuple[int, int], str]

    """
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∂–∞–Ω—Ä–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    genres = get_all_genres()

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∂–∞–Ω—Ä–æ–≤, –∞ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∞–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π —Å–ª–æ–≤–∞—Ä—å: {genre_id: (min_year, max_year, genre_name)}
    genre_data = display_genre_table(genres)  # –≤—ã–Ω–µ—Å–µ–Ω–æ –≤—Å—ë –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –ø–æ–¥—Å—á—ë—Ç—ã

    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ –∂–∞–Ω—Ä–æ–≤
    valid_ids = genre_data.keys()

    while True:
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID –∂–∞–Ω—Ä–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        genre_id_input = get_user_input("Enter genre ID: ")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–æ–¥ —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä
        if genre_id_input.isdigit():
            genre_id = int(genre_id_input)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥—ë–Ω–Ω—ã–π ID –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å—Ä–µ–¥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤
            if genre_id in genre_data:
                min_year, max_year, genre_name = genre_data[genre_id]

                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∂–∞–Ω—Ä –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
                return genre_id, (min_year, max_year), genre_name

        # –í —Å–ª—É—á–∞–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞ ‚Äî —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å
        print(
            f"Invalid genre ID. Please enter one of: {', '.join(map(str, valid_ids))}"
        )


def get_year_range(min_year: int, max_year: int) -> Tuple[int, int]:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω –ª–µ—Ç –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.

    –¢—Ä–µ–±—É–µ—Ç, —á—Ç–æ–±—ã –æ–±–∞ –≥–æ–¥–∞ –±—ã–ª–∏ —á–µ—Ç—ã—Ä—ë—Ö–∑–Ω–∞—á–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏
    –∏ –≤—Ö–æ–¥–∏–ª–∏ –≤ –¥–æ–ø—É—Å—Ç–∏–º—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω min_year - max_year.

    :param min_year: –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã–π –≥–æ–¥
    :param max_year: –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω—ã–π –≥–æ–¥
    :return: –∫–æ—Ä—Ç–µ–∂ (–≥–æ–¥_–Ω–∞—á–∞–ª–∞, –≥–æ–¥_–æ–∫–æ–Ω—á–∞–Ω–∏—è)
    """
    while True:
        year_from_input = get_user_input(f"Enter start year ({min_year}-{max_year}): ")
        year_to_input = get_user_input(f"Enter end year ({min_year}-{max_year}): ")
        if year_from_input.isdigit() and year_to_input.isdigit():
            year_from = int(year_from_input)
            year_to = int(year_to_input)
            if len(year_from_input) == 4 and len(year_to_input) == 4:
                if min_year <= year_from <= year_to <= max_year:
                    return year_from, year_to
        print("Invalid year range. Try again.")


def search_by_keyword_workflow() -> None:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤.

    –ü–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
    –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    keyword = get_user_input("Enter keyword to search for movies: ")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–≤—ë–ª –Ω–∏—á–µ–≥–æ (–∏–ª–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª—ã), –∑–∞–≤–µ—Ä—à–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    if not keyword:
        print("‚ö†Ô∏è Keyword cannot be empty.")
        return

    # –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
    movies = search_movies(keyword=keyword)

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    log_search("keyword", {"keyword": keyword.lower()}, len(movies))

    if not movies:
        print("üîç Nothing found for your request.")
        return

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
    paginate_results(movies)


def search_by_genre_and_year_workflow() -> None:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∂–∞–Ω—Ä –∏ –¥–∏–∞–ø–∞–∑–æ–Ω –≥–æ–¥–æ–≤, –∑–∞—Ç–µ–º –∏—â–µ—Ç —Ñ–∏–ª—å–º—ã.

    –ü–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.
    –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî —Å–æ–æ–±—â–∞–µ—Ç –æ–± —ç—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    # –í—ã–±–æ—Ä –∂–∞–Ω—Ä–∞
    genre_id, (min_year, max_year), genre_name = select_genre()

    # –í—ã–±–æ—Ä –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –≥–æ–¥–æ–≤ –≤ —Ä–∞–º–∫–∞—Ö –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∂–∞–Ω—Ä–∞
    year_from, year_to = get_year_range(min_year, max_year)

    # –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    movies = search_movies(genre_id=genre_id, year_from=year_from, year_to=year_to)

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
    log_search(
        "genre_year",
        {
            "genre_name": genre_name,
            "genre_id": genre_id,
            "year_from": year_from,
            "year_to": year_to,
        },
        len(movies),
    )

    if not movies:
        print("üîç No movies found for this genre and year range.")
        return

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
    paginate_results(movies)


def search_by_rating_workflow() -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–π –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É MPAA (–Ω–∞–ø—Ä–∏–º–µ—Ä: G, PG, PG-13, R, NC-17).

    –®–∞–≥–∏:
    1. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤.
    2. –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ–≤–æ–π –≤–≤–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    3. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤—ã–±–æ—Ä–∞.
    4. –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ä–µ–π—Ç–∏–Ω–≥—É.
    5. –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∏—Å–∫–µ.
    6. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ (–µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã).

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None
    """
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞–º–∏ –∏ –ø–æ–ª—É—á–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–º–µ—Ä–æ–≤ –∏ –∫–æ–¥–æ–≤ —Ä–µ–π—Ç–∏–Ω–≥–∞
    index_to_code = display_ratings_table(available_ratings)

    selected_rating = None  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π

    while True:
        choice = get_user_input("Select a rating by number: ")

        # –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞
        if not choice.isdigit():
            print("‚ùå Only numbers are allowed. Please try again.")
            continue

        index = int(choice)    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤–≤–æ–¥ –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥—ë–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤
        if index in index_to_code:
            selected_rating = index_to_code[index]
            break

        print(f"Invalid selection. Please enter a number between 1 and {len(index_to_code)}.")

    if selected_rating is None:
        print("No valid rating selected. Exiting.")
        return

    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º
    movies = search_movies(rating=selected_rating)

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∏—Å–∫–µ –≤ –ª–æ–≥-—Ñ–∞–π–ª
    log_search("rating", {"rating": selected_rating}, len(movies))

    if not movies:
        print("üîç No movies found for the selected rating.")
        return

    # –ï—Å–ª–∏ —Ñ–∏–ª—å–º—ã –Ω–∞–π–¥–µ–Ω—ã ‚Äî –≤—ã–≤–æ–¥–∏–º –∏—Ö —Å —Ä–∞–∑–±–∏–≤–∫–æ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    paginate_results(movies)